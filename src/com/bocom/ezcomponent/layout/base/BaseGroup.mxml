<?xml version="1.0" encoding="utf-8"?>
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
					xmlns:parsley="http://www.spicefactory.org/parsley"
					implements="com.bocom.ezcomponent.interfaces.IBizDataInitialize,
					com.bocom.ezcomponent.interfaces.IBizDataCollect">
	<fx:Declarations>
		<parsley:Configure/>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.bocom.ezcomponent.message.BizInitializeDataReadyMessage;
			import com.bocom.ezcomponent.model.BizInitializeData;
			import com.bocom.ezcomponent.util.LogFormatter;
			import com.bocomm.guip.components.comp.columncontainer.GuipColumn2Container;
			import com.bocomm.guip.components.comp.form.datefield.FormDateFieldView;
			import com.bocomm.guip.components.comp.form.numberinput.FormNumberInputView;
			import com.bocomm.guip.components.comp.form.textinput.FormTextinputView;
			
			import mx.collections.ArrayCollection;
			import mx.core.IVisualElement;
			import mx.logging.ILogger;
			import mx.logging.Log;
			import mx.utils.ObjectUtil;
			
			[MessageDispatcher]
			public var dispatcher:Function;
			
			private var _isBizInitialized:Boolean=false;
			
			[Inject]
			public var bizInitailizeData:BizInitializeData;
			
			[Inject]
			public var bizGroups:ArrayCollection;
			
			private var log:ILogger = Log.getLogger("com.bocom.ezcomponent");
			
			public var form:GuipColumn2Container;
			
			[Init]
			public function onContextInitialized():void{
				this.bizGroups.addItem(this);
				
				if(bizInitailizeData.isAvailable() && !_isBizInitialized){
					log.debug(LogFormatter.appendClassname("Begin biz initialize",this));
					_isBizInitialized=true;
					bizInitialize(this.bizInitailizeData);
				}else{
					log.debug(LogFormatter.appendClassname("Skip biz initialize because of:[bizInitailizeData.isAvailable:" +bizInitailizeData.isAvailable()+
						",_isBizInitialized:" +_isBizInitialized+
						"]",this));
				}
			}
			
			
			[MessageHandler]
			public function handleBizInitializeDataReady(msg:BizInitializeDataReadyMessage):void{
				var data:Object=msg.data;
				if(data.isAvailable() && !_isBizInitialized){
					log.debug(LogFormatter.appendClassname("Begin biz initialize",this));
					_isBizInitialized=true;
					bizInitialize(this.bizInitailizeData);
				}
				else{
					log.debug(LogFormatter.appendClassname("Skip biz initialize because of:[bizInitailizeData.isAvailable:" +bizInitailizeData.isAvailable()+
						",_isBizInitialized:" +_isBizInitialized+
						"]",this));
				}
			}
			
			/**
			 * 框架默认的责任是：找到初始化对象中的和当前页签名称相同的子对象，并将其属性显示到相应的栏位上
			 */
			public function bizInitialize(bizInitailizeData:BizInitializeData):void{
				beforeBizInitialize(bizInitailizeData);
				
				if(form){
					for(var key:String in bizInitailizeData.data){
						if(key==this.name){
							var subObject:Object=bizInitailizeData.data[key];
							for (var i:int = 0; i < form.numElements; i++) 
							{
								var item:IVisualElement=form.getElementAt(i);
								if(item is FormTextinputView){
									var textItem:FormTextinputView=item as FormTextinputView;
									if(subObject[textItem.name]){
										textItem.value=subObject[textItem.name]
									}
								}else if(item is FormNumberInputView){
									var numberItem:FormNumberInputView=item as FormNumberInputView;
									if(subObject[numberItem.name]){
										numberItem.value=subObject[numberItem.name]
									}
								}else if(item is FormDateFieldView){
									var dateItem:FormDateFieldView=item as FormDateFieldView;
									if(subObject[dateItem.name]){
										dateItem.valueString=subObject[dateItem.name]
									}
								}
							}
						}
					}
				}else{
					log.debug(LogFormatter.appendClassname("It seems that the form is null",this));
				}
				
				afterBizInitialize(bizInitailizeData);
			}
			
			/**
			 * 框架会找到初始化数据中与该Group的name属性相对应的部分，并将初始化对象中属性和页面该Group中的name相一致的域进行自动填充。
			 * 一般复写这个方法是对初始化数据进行改造，使得框架可以把这些数据自动填充到页面上，比如
			 * bizInitailizeData.data[this.name]={"QUOTE_ID":"TEST"};
			 */
			public function beforeBizInitialize(bizInitailizeData:BizInitializeData):void{
				
			}
			
			/**
			 * 框架将数据平铺到页面上之后进行调用，你可以复写这个方法，写一些自己的初始化逻辑
			 */
			public function afterBizInitialize(bizInitailizeData:BizInitializeData):void{
				
			}
			
			public function bizDataCollect():Object{
				if(form){
					beforeBizDataCollect(data);
					var data:Object=new Object();
					for (var i:int = 0; i < form.numElements; i++) 
					{
						var item:IVisualElement=form.getElementAt(i);
						if(item is FormTextinputView){
							var textItem:FormTextinputView=item as FormTextinputView;
							data[textItem.name]=textItem.value;
						}else if(item is FormNumberInputView){
							var numberItem:FormNumberInputView=item as FormNumberInputView;
							data[numberItem.name]=numberItem.value;
						}else if(item is FormDateFieldView){
							var dateItem:FormDateFieldView=item as FormDateFieldView;
							data[dateItem.name]=dateItem.valueString;
						}
					}
					log.info(LogFormatter.appendClassname("Finish to collect data:"+ObjectUtil.toString(data),this));
					afterBizDataCollect(data);
					return data;
				}else {
					log.error(LogFormatter.appendClassname("Form is null",this));
				}
				return null;
			}
			
			/**
			 * 数据收集前调用，你可以复写这个方法，来调整页面上的一些数据
			 */
			public function beforeBizDataCollect(data:Object):void{
				
			}
			
			/**
			 * 数据收集后调用，你可以复写这个方法，来调整页面上的一些数据
			 */
			public function afterBizDataCollect(data:Object):void{
				
			}
			
			public function getBizId():String{
				return this.name;
			}
			
			/**
			 * 提供该Group的显示Title，对于页签则是页签名，对于数据块，则是该块的名称，可以复写来提供自己的名称
			 */
			public function getGroupTitle():String{
				return "Must be overwrite!!";
			}
		]]>
	</fx:Script>
</s:VGroup>
